{"version":3,"sources":["context/GlobalContext.js","context/GlobalState.js","components/Header/Header.js","components/Time/Time.js","components/Form/Form.js","components/Data/Data.js","App.js","index.js"],"names":["GlobalContext","createContext","GlobalState","props","useState","main","setMain","text","setText","setLocation","error","setError","api_call","e","a","url","process","request","axios","get","response","data","console","log","useEffect","Provider","value","children","Header","className","Time","Date","clock","setClock","intervalID","setInterval","updateClock","clearInterval","toLocaleString","replace","Form","useContext","location","onSubmit","preventDefault","target","autoComplete","type","name","onChange","bind","Data","celsius","i","toFixed","temp","humidity","temp_min","temp_max","style","textAlign","App","ReactDOM","render","document","getElementById"],"mappings":"6PAGaA,EAAgBC,0B,iBC4CdC,EA3CK,SAACC,GAAW,IAAD,EACHC,mBAAS,IADN,mBACpBC,EADoB,KACdC,EADc,OAEHF,mBAAS,IAFN,mBAEpBG,EAFoB,KAEdC,EAFc,OAGKJ,mBAAS,IAHd,mBAGVK,GAHU,aAIDL,qBAJC,mBAIpBM,EAJoB,KAIbC,EAJa,KAMrBC,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,kEAETL,EAAYI,GACPA,EAHI,0CAIEF,EAAS,uCAAwCL,EAAQ,QAJ3D,cAMHS,EANG,4DAMwDF,EANxD,kBAMmEG,oCACtEC,EAAUC,IAAMC,IAAIJ,GAPjB,SAQcE,EARd,OAQHG,EARG,OASTd,EAAQc,EAASC,KAAKhB,MACtBG,EAAQY,EAASC,MAVR,kDAaTC,QAAQC,IAAI,UAAZ,MAbS,0DAAH,sDAqBd,OAJAC,qBAAU,WACNZ,MACD,IAGC,kBAACZ,EAAcyB,SAAf,CACIC,MACI,CACId,WACAP,OACAE,OACAG,UAINP,EAAMwB,WChCLC,EARA,WACX,OACI,yBAAKC,UAAU,UACX,wBAAKA,UAAU,gBAAf,sBCoBGC,EAvBF,WAAO,IAAD,EACW1B,mBAAS,IAAI2B,MADxB,mBACRC,EADQ,KACDC,EADC,KAGfT,qBAAU,WACN,IAAMU,EAAaC,aAAY,kBAC3BC,MAAe,KAEnB,OAAO,WACHC,cAAcH,OAItB,IAAME,EAAc,WAChBH,EAAS,IAAIF,OAGjB,OACI,oCACI,wBAAIF,UAAU,SAAd,IAAyBG,EAAMM,eAAe,SAASC,QAAQ,KAAM,UCgBlEC,EAhCF,WAAO,IACR5B,EAAa6B,qBAAWzC,GAAxBY,SADO,EAEiBR,mBAAS,IAF1B,mBAERsC,EAFQ,KAEEjC,EAFF,KAaf,OACI,yBAAKoB,UAAU,kBACX,0BAAMc,SAXS,SAAC9B,GACpBA,EAAE+B,iBACFhC,EAASC,EAAEgC,OAAO,GAAGnB,OACrBjB,EAAY,KAQwBoB,UAAU,wBACtC,2BACIiB,aAAa,MACbC,KAAK,OACLlB,UAAU,wBACVmB,KAAK,WACLtB,MAAOgB,EACPO,SAbK,SAACpC,GAClBJ,EAAYI,EAAEgC,OAAOnB,QAYcwB,U,KAE3B,yBAAKrB,UAAU,0BACX,4BAAQA,UAAU,0BAAlB,cCMLsB,EA/BF,WAAO,IAAD,EACeV,qBAAWzC,GAAjCK,EADO,EACPA,KAAME,EADC,EACDA,KAAMG,EADL,EACKA,MACd0C,EAAU,SAACC,GAEb,OAAQA,EAAI,QAAQC,QAAQ,IAGhC,OACI,wCACIjD,EAAO,yBAAKwB,UAAU,gBAClB,uBAAGA,UAAU,oBAAb,wBAAqD,0BAAMA,UAAU,sBAAsBtB,EAAKyC,OAChG,yBAAKnB,UAAU,qBACX,0BAAMA,UAAU,0BACZ,uBAAGA,UAAU,uBAAb,eACA,uBAAGA,UAAU,uBAAuBuB,EAAQ/C,EAAKkD,MAAjD,UAEJ,0BAAM1B,UAAU,0BACZ,uBAAGA,UAAU,uBAAb,YACA,uBAAGA,UAAU,uBAAuBxB,EAAKmD,SAAW,MAExD,0BAAM3B,UAAU,0BACZ,uBAAGA,UAAU,uBAAb,WACA,uBAAGA,UAAU,uBAAuBuB,EAAQ/C,EAAKoD,UAAjD,IAA6DL,EAAQ/C,EAAKqD,cAG7E,uBAAGC,MAAO,CAAEC,UAAW,WAAalD,KCN1CmD,G,YAbH,WACV,OACE,kBAAC,EAAD,KACE,yBAAKhC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCbRiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.392d4c36.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n//create context\r\nexport const GlobalContext = createContext();","import React, { useEffect, useState } from 'react';\r\nimport { GlobalContext } from './GlobalContext';\r\nimport axios from 'axios';\r\n\r\nconst GlobalState = (props) => {\r\n    const [main, setMain] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [error, setError] = useState();\r\n\r\n    const api_call = async (e) => {\r\n        try {\r\n            setLocation(e);\r\n            if (!e) {\r\n                return setError('Please enter the name of the city !'), setMain(null);\r\n            }\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=${process.env.REACT_APP_API_KEY}`;\r\n            const request = axios.get(url);\r\n            const response = await request;\r\n            setMain(response.data.main);\r\n            setText(response.data);\r\n\r\n        } catch (error) {\r\n            console.log('Error: ', error)\r\n        }\r\n    }\r\n    //console.log(location)\r\n    useEffect(() => {\r\n        api_call();\r\n    }, [])\r\n    //console.log(location);\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={\r\n                {\r\n                    api_call,\r\n                    main,\r\n                    text,\r\n                    error\r\n\r\n                }\r\n            }>\r\n            { props.children}\r\n        </GlobalContext.Provider >\r\n    )\r\n}\r\n\r\nexport default GlobalState;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            < h1 className=\"header-title\" > Forecast Finder</h1 >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Time = () => {\r\n    const [clock, setClock] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalID = setInterval(() =>\r\n            updateClock(), 1000\r\n        );\r\n        return function cleanup() {\r\n            clearInterval(intervalID);\r\n        }\r\n    });\r\n\r\n    const updateClock = () => {\r\n        setClock(new Date());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"clock\" > {clock.toLocaleString('en-GB').replace(', ', ' - ')}</h3>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Time;","import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\n\r\nconst Form = () => {\r\n    const { api_call } = useContext(GlobalContext);\r\n    const [location, setLocation] = useState('');\r\n\r\n    const onSubmitAction = (e) => {\r\n        e.preventDefault();\r\n        api_call(e.target[0].value);\r\n        setLocation('')\r\n    }\r\n    const onChangeForm = (e) => {\r\n        setLocation(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"weather-search\">\r\n            <form onSubmit={onSubmitAction} className=\"weather-search__form\">\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    className=\"weather-search__input\"\r\n                    name=\"location\"\r\n                    value={location}\r\n                    onChange={onChangeForm.bind(this)}\r\n                />\r\n                <div className=\"weather-search__submit\">\r\n                    <button className=\"weather-search__button\">&rarr;</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../../context/GlobalContext';\r\n\r\n\r\nconst Data = () => {\r\n    const { main, text, error } = useContext(GlobalContext);\r\n    const celsius = (i) => {\r\n        //convert from kelvin to celsius formula\r\n        return (i - 273.15).toFixed(1);\r\n    }\r\n    //console.log(main)\r\n    return (\r\n        <> {\r\n            main ? <div className=\"weather-data\">\r\n                <p className=\"weather__tagline\">Weather forecast for <span className=\"weather-data__city\">{text.name}</span></p>\r\n                <div className=\"weather-data__box\">\r\n                    <span className=\"weather-data__property\">\r\n                        <p className=\"weather-data__title\">Temperature</p>\r\n                        <p className=\"weather-data__value\">{celsius(main.temp)}Â°C</p>\r\n                    </span>\r\n                    <span className=\"weather-data__property\">\r\n                        <p className=\"weather-data__title\">Humidity</p>\r\n                        <p className=\"weather-data__value\">{main.humidity + '%'}</p>\r\n                    </span>\r\n                    <span className=\"weather-data__property\">\r\n                        <p className=\"weather-data__title\">Min/Max</p>\r\n                        <p className=\"weather-data__value\">{celsius(main.temp_min)}/{celsius(main.temp_max)}</p>\r\n                    </span>\r\n                </div>\r\n            </div> : <p style={{ textAlign: 'center' }}>{error}</p>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Data;","import React from 'react';\nimport GlobalState from './context/GlobalState';\nimport Header from './components/Header/Header';\nimport Time from './components/Time/Time';\nimport Form from './components/Form/Form';\nimport Data from './components/Data/Data';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => {\n  return (\n    <GlobalState>\n      <div className=\"container\">\n        <Header />\n        <Time />\n        <Form />\n        <Data />\n      </div>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}